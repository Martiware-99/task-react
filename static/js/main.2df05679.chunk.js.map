{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","prevTodos","uuidv4","style","margin","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAKnC,OACE,8BACE,kCACE,uBAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SAPrD,WACEJ,EAAWD,EAAKM,OAOXN,EAAKO,UCRC,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACxC,OACEQ,EAAMC,KAAI,SAAAV,GACR,OAAO,cAACD,EAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKM,O,YCFvBK,EAAoB,gBAgDXC,MA9Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KACMC,EAAcC,mBAgCpB,OA9BAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAASI,KACzB,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUf,MACtD,CAACA,IAwBF,qCACE,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WAvB5B,SAAoBK,GAClB,IAAMmB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAA1B,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBU,EAASW,MAoBP,uBAAOE,IAAKZ,EAAab,KAAK,SAC9B,uBACA,wBAAQ0B,QAnBZ,SAAuBC,GACrB,IAAMtB,EAAOQ,EAAYe,QAAQC,MACpB,KAATxB,IACJO,GAAS,SAAAkB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE1B,GAAI2B,cAAU1B,KAAMA,EAAMH,UAAU,QAE9DW,EAAYe,QAAQC,MAAQ,OAaMG,MAAO,CAACC,OAAQ,oBAAhD,sBACA,wBAAQP,QAXZ,WACE,IAAMH,EAAWhB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAC5CU,EAASW,IAS4BS,MAAO,CAACC,OAAQ,uBAAnD,mBACA,gCAAM1B,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAAUiC,OAA3C,qBC3CNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2df05679.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({ todo, toggleTodo }) {\n  function handleTodoClick() {\n    toggleTodo(todo.id)\n  }\n  \n  return (\n    <div>\n      <label>\n        <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick} />\n        {todo.name}\n      </label>\n    </div>\n  )\n}","import React from 'react'\nimport Todo from './Todo'\n\nexport default function TodoList({ todos, toggleTodo }) {\n  return (\n    todos.map(todo => {\n      return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\n    })\n  )\n}","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <br/>\n      <button onClick={handleAddTodo} style={{margin: '10px 10px 10px 0'}}>Add Task</button>\n      <button onClick={handleClearTodos} style={{margin: '10px 10px 10px 10px'}}>Clear</button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}